import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

buildscript {
    repositories {
        gradlePluginPortal()
        maven {
            url = "https://packages.confluent.io/maven/"
        }
        maven {
            url = "https://jitpack.io"
        }
    }
}

plugins {
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.jetbrains.kotlin.jvm' version '1.9.20'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.20'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.20'
    id "org.jetbrains.kotlin.plugin.allopen" version "1.9.20"
    id 'com.github.imflog.kafka-schema-registry-gradle-plugin' version "1.12.0"
    id 'com.github.davidmc24.gradle.plugin.avro' version "1.9.1"
}

allOpen {
    annotation("jakarta.persistence.Entity")
}

group = 'ru.aasmc'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
    maven {
        url = "https://packages.confluent.io/maven/"
    }
    maven {
        url = "https://jitpack.io"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation("io.confluent:kafka-avro-serializer:7.5.2")
    implementation("org.apache.avro:avro:1.11.0")
    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

schemaRegistry {
    url = 'http://localhost:8081'
    quiet = true
    register {
        subject('debezium.public.products-value', 'src/main/avro/product.avsc', 'AVRO')
    }
}

tasks.withType(KotlinCompile) {
    kotlinOptions {
        freeCompilerArgs += '-Xjsr305=strict'
        jvmTarget = '17'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
